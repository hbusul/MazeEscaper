function ExtendedMath.pow 3
push argument 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
return
label IF_FALSE0
push argument 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
return
label IF_FALSE1
push argument 1
push constant 1
and
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push constant 1
sub
pop argument 1
push argument 0
pop local 0
goto IF_END2
label IF_FALSE2
push constant 1
pop local 0
label IF_END2
push argument 0
push argument 0
call Math.multiply 2
pop argument 0
push argument 1
push constant 2
call Math.divide 2
pop argument 1
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push argument 1
lt
not
if-goto WHILE_END0
push local 0
push argument 0
call Math.multiply 2
pop local 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 0
return
